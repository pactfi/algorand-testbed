#pragma version 6
txn OnCompletion
int NoOp
==
bnz main_l2
err
main_l2:
txn RekeyTo
global ZeroAddress
==
txna Assets 0
int {primary_asset_id}
==
&&
txna Assets 1
int {secondary_asset_id}
==
&&
txn NumAssets
int 3
<=
&&
txn NumAssets
int 3
==
bnz main_l88
int 1
main_l4:
&&
!
bnz main_l87
txn ApplicationID
int 0
==
bnz main_l86
txna ApplicationArgs 0
byte "OPTIN"
==
bnz main_l83
txna ApplicationArgs 0
byte "CLT"
==
bnz main_l74
txna ApplicationArgs 0
byte "SWAP"
==
bnz main_l59
txna ApplicationArgs 0
byte "ADDLIQ"
==
bnz main_l28
txna ApplicationArgs 0
byte "REMLIQ"
==
bnz main_l27
txna ApplicationArgs 0
byte "WITHDRAWFEES"
==
bnz main_l26
txna ApplicationArgs 0
byte "RAMP_A"
==
bnz main_l22
txna ApplicationArgs 0
byte "STOP_RAMP_A"
==
bnz main_l21
txna ApplicationArgs 0
byte "CHANGE_ADMIN"
==
bnz main_l20
txna ApplicationArgs 0
byte "CHANGE_PACT_FEE"
==
bnz main_l19
txna ApplicationArgs 0
byte "CHANGE_TREASURY"
==
bnz main_l18
err
main_l18:
txn Sender
byte "ADMIN"
app_global_get
==
assert
txna Accounts 1
len
int 32
==
assert
byte "TREASURY"
txna Accounts 1
app_global_put
int 1
return
main_l19:
txn Sender
byte "ADMIN"
app_global_get
==
assert
txna ApplicationArgs 1
btoi
byte "FEE_BPS"
app_global_get
int 2
/
<=
assert
byte "PACT_FEE_BPS"
txna ApplicationArgs 1
btoi
app_global_put
int 1
return
main_l20:
txn Sender
byte "ADMIN"
app_global_get
==
assert
txna Accounts 1
len
int 32
==
assert
byte "ADMIN"
txna Accounts 1
app_global_put
int 1
return
main_l21:
txn Sender
byte "ADMIN"
app_global_get
==
assert
byte "INITIAL_A"
app_global_get
byte "FUTURE_A"
app_global_get
byte "INITIAL_A_TIME"
app_global_get
byte "FUTURE_A_TIME"
app_global_get
callsub amplifier_3
store 35
byte "INITIAL_A"
load 35
app_global_put
byte "FUTURE_A"
load 35
app_global_put
byte "INITIAL_A_TIME"
global LatestTimestamp
app_global_put
byte "FUTURE_A_TIME"
global LatestTimestamp
app_global_put
int 1
return
main_l22:
txn Sender
byte "ADMIN"
app_global_get
==
assert
txna ApplicationArgs 2
btoi
global LatestTimestamp
int 86400
+
>=
assert
byte "INITIAL_A"
app_global_get
byte "FUTURE_A"
app_global_get
byte "INITIAL_A_TIME"
app_global_get
byte "FUTURE_A_TIME"
app_global_get
callsub amplifier_3
store 34
txna ApplicationArgs 1
btoi
int 1000
>=
txna ApplicationArgs 1
btoi
int 1000000
<=
&&
assert
txna ApplicationArgs 1
btoi
load 34
<
bnz main_l25
txna ApplicationArgs 1
btoi
load 34
int 10
*
<=
assert
main_l24:
byte "INITIAL_A"
load 34
app_global_put
byte "FUTURE_A"
txna ApplicationArgs 1
btoi
app_global_put
byte "INITIAL_A_TIME"
global LatestTimestamp
app_global_put
byte "FUTURE_A_TIME"
txna ApplicationArgs 2
btoi
app_global_put
int 1
return
main_l25:
txna ApplicationArgs 1
btoi
int 10
*
load 34
>=
assert
b main_l24
main_l26:
byte "TREASURY"
app_global_get
int {primary_asset_id}
byte "PRIMARY_FEES"
app_global_get
callsub SendToAddress_1
byte "TREASURY"
app_global_get
int {secondary_asset_id}
byte "SECONDARY_FEES"
app_global_get
callsub SendToAddress_1
byte "PRIMARY_FEES"
int 0
app_global_put
byte "SECONDARY_FEES"
int 0
app_global_put
int 1
return
main_l27:
txn GroupIndex
int 1
-
gtxns TypeEnum
int axfer
==
txn GroupIndex
int 1
-
gtxns RekeyTo
global ZeroAddress
==
&&
txn GroupIndex
int 1
-
gtxns AssetCloseTo
global ZeroAddress
==
&&
txn GroupIndex
int 1
-
gtxns XferAsset
byte "LTID"
app_global_get
==
&&
txn GroupIndex
int 1
-
gtxns AssetReceiver
global CurrentApplicationAddress
==
&&
assert
byte "L"
app_global_get
int 0
!=
assert
txn GroupIndex
int 1
-
gtxns AssetAmount
byte "A"
app_global_get
mulw
int 0
byte "L"
app_global_get
divmodw
pop
pop
swap
!
assert
store 32
txn GroupIndex
int 1
-
gtxns AssetAmount
byte "B"
app_global_get
mulw
int 0
byte "L"
app_global_get
divmodw
pop
pop
swap
!
assert
store 33
byte "A"
byte "A"
app_global_get
load 32
-
app_global_put
byte "B"
byte "B"
app_global_get
load 33
-
app_global_put
byte "L"
byte "L"
app_global_get
txn GroupIndex
int 1
-
gtxns AssetAmount
-
app_global_put
load 33
txna ApplicationArgs 2
btoi
-
pop
load 32
txna ApplicationArgs 1
btoi
-
pop
int {primary_asset_id}
load 32
callsub SendToCaller_0
int {secondary_asset_id}
load 33
callsub SendToCaller_0
int 1
return
main_l28:
byte "LTID"
app_global_get
assert
int {primary_asset_id}
!
bnz main_l58
txn GroupIndex
int 2
-
gtxns TypeEnum
int axfer
==
txn GroupIndex
int 2
-
gtxns RekeyTo
global ZeroAddress
==
&&
txn GroupIndex
int 2
-
gtxns AssetCloseTo
global ZeroAddress
==
&&
txn GroupIndex
int 2
-
gtxns XferAsset
int {primary_asset_id}
==
&&
txn GroupIndex
int 2
-
gtxns AssetReceiver
global CurrentApplicationAddress
==
&&
main_l30:
assert
txn GroupIndex
int 1
-
gtxns TypeEnum
int axfer
==
txn GroupIndex
int 1
-
gtxns RekeyTo
global ZeroAddress
==
&&
txn GroupIndex
int 1
-
gtxns AssetCloseTo
global ZeroAddress
==
&&
txn GroupIndex
int 1
-
gtxns XferAsset
int {secondary_asset_id}
==
&&
txn GroupIndex
int 1
-
gtxns AssetReceiver
global CurrentApplicationAddress
==
&&
assert
byte "L"
app_global_get
int 0
==
bnz main_l51
int 5
callsub increaseopcodequota_5
byte "INITIAL_A"
app_global_get
byte "FUTURE_A"
app_global_get
byte "INITIAL_A_TIME"
app_global_get
byte "FUTURE_A_TIME"
app_global_get
callsub amplifier_3
store 16
int 1000
byte "A"
app_global_get
byte "B"
app_global_get
int 2
load 16
int 4
callsub getD_2
store 17
int 1000
byte "A"
app_global_get
int {primary_asset_id}
!
bnz main_l50
txn GroupIndex
int 2
-
gtxns AssetAmount
main_l33:
+
byte "B"
app_global_get
txn GroupIndex
int 1
-
gtxns AssetAmount
+
int 2
load 16
int 4
callsub getD_2
store 18
byte "FEE_BPS"
app_global_get
int 2
*
int 4
int 2
int 1
-
*
/
store 24
load 18
byte "A"
app_global_get
mulw
int 0
load 17
divmodw
pop
pop
swap
!
assert
store 25
byte "A"
app_global_get
int {primary_asset_id}
!
bnz main_l49
txn GroupIndex
int 2
-
gtxns AssetAmount
main_l35:
+
store 26
load 25
load 26
>
bnz main_l48
load 26
load 25
-
store 27
main_l37:
load 27
load 24
mulw
int 0
int 10000
divmodw
pop
pop
swap
!
assert
store 22
byte "FEE_BPS"
app_global_get
int 2
*
int 4
int 2
int 1
-
*
/
store 28
load 18
byte "B"
app_global_get
mulw
int 0
load 17
divmodw
pop
pop
swap
!
assert
store 29
byte "B"
app_global_get
txn GroupIndex
int 1
-
gtxns AssetAmount
+
store 30
load 29
load 30
>
bnz main_l47
load 30
load 29
-
store 31
main_l39:
load 31
load 28
mulw
int 0
int 10000
divmodw
pop
pop
swap
!
assert
store 23
int 1000
byte "A"
app_global_get
int {primary_asset_id}
!
bnz main_l46
txn GroupIndex
int 2
-
gtxns AssetAmount
main_l41:
+
load 22
-
byte "B"
app_global_get
txn GroupIndex
int 1
-
gtxns AssetAmount
+
load 23
-
int 2
load 16
int 4
callsub getD_2
store 19
byte "L"
app_global_get
load 19
load 17
-
mulw
int 0
load 17
divmodw
pop
pop
swap
!
assert
store 20
load 20
txna ApplicationArgs 1
btoi
-
pop
byte "LTID"
app_global_get
load 20
callsub SendToCaller_0
byte "L"
byte "L"
app_global_get
load 20
+
app_global_put
byte "PRIMARY_FEES"
byte "PRIMARY_FEES"
app_global_get
load 22
+
app_global_put
byte "SECONDARY_FEES"
byte "SECONDARY_FEES"
app_global_get
load 23
+
app_global_put
byte "A"
byte "A"
app_global_get
int {primary_asset_id}
!
bnz main_l45
txn GroupIndex
int 2
-
gtxns AssetAmount
main_l43:
+
app_global_put
byte "A"
byte "A"
app_global_get
load 22
-
app_global_put
byte "B"
byte "B"
app_global_get
txn GroupIndex
int 1
-
gtxns AssetAmount
+
app_global_put
byte "B"
byte "B"
app_global_get
load 23
-
app_global_put
main_l44:
int 1
return
main_l45:
txn GroupIndex
int 2
-
gtxns Amount
b main_l43
main_l46:
txn GroupIndex
int 2
-
gtxns Amount
b main_l41
main_l47:
load 29
load 30
-
store 31
b main_l39
main_l48:
load 25
load 26
-
store 27
b main_l37
main_l49:
txn GroupIndex
int 2
-
gtxns Amount
b main_l35
main_l50:
txn GroupIndex
int 2
-
gtxns Amount
b main_l33
main_l51:
int {primary_asset_id}
!
bnz main_l57
txn GroupIndex
int 2
-
gtxns AssetAmount
main_l53:
itob
txn GroupIndex
int 1
-
gtxns AssetAmount
itob
b*
bsqrt
btoi
store 21
byte "L"
load 21
app_global_put
byte "A"
int {primary_asset_id}
!
bnz main_l56
txn GroupIndex
int 2
-
gtxns AssetAmount
main_l55:
app_global_put
byte "B"
txn GroupIndex
int 1
-
gtxns AssetAmount
app_global_put
load 21
int 1000
-
store 21
load 21
txna ApplicationArgs 1
btoi
>=
assert
byte "LTID"
app_global_get
load 21
callsub SendToCaller_0
b main_l44
main_l56:
txn GroupIndex
int 2
-
gtxns Amount
b main_l55
main_l57:
txn GroupIndex
int 2
-
gtxns Amount
b main_l53
main_l58:
txn GroupIndex
int 2
-
gtxns TypeEnum
int pay
==
txn GroupIndex
int 2
-
gtxns RekeyTo
global ZeroAddress
==
&&
txn GroupIndex
int 2
-
gtxns CloseRemainderTo
global ZeroAddress
==
&&
txn GroupIndex
int 2
-
gtxns Receiver
global CurrentApplicationAddress
==
&&
b main_l30
main_l59:
int 5
callsub increaseopcodequota_5
int {primary_asset_id}
!
bnz main_l73
txn GroupIndex
int 1
-
gtxns TypeEnum
int axfer
==
txn GroupIndex
int 1
-
gtxns RekeyTo
global ZeroAddress
==
&&
txn GroupIndex
int 1
-
gtxns AssetCloseTo
global ZeroAddress
==
&&
txn GroupIndex
int 1
-
gtxns XferAsset
int {primary_asset_id}
==
&&
txn GroupIndex
int 1
-
gtxns AssetReceiver
global CurrentApplicationAddress
==
&&
main_l61:
bnz main_l66
txn GroupIndex
int 1
-
gtxns TypeEnum
int axfer
==
txn GroupIndex
int 1
-
gtxns RekeyTo
global ZeroAddress
==
&&
txn GroupIndex
int 1
-
gtxns AssetCloseTo
global ZeroAddress
==
&&
txn GroupIndex
int 1
-
gtxns XferAsset
int {secondary_asset_id}
==
&&
txn GroupIndex
int 1
-
gtxns AssetReceiver
global CurrentApplicationAddress
==
&&
bnz main_l65
int 0
return
int 1
return
main_l65:
int 1000
byte "A"
app_global_get
byte "B"
app_global_get
int 2
byte "INITIAL_A"
app_global_get
byte "FUTURE_A"
app_global_get
byte "INITIAL_A_TIME"
app_global_get
byte "FUTURE_A_TIME"
app_global_get
callsub amplifier_3
int 4
callsub getD_2
store 15
byte "B"
app_global_get
txn GroupIndex
int 1
-
gtxns AssetAmount
+
byte "INITIAL_A"
app_global_get
byte "FUTURE_A"
app_global_get
byte "INITIAL_A_TIME"
app_global_get
byte "FUTURE_A_TIME"
app_global_get
callsub amplifier_3
load 15
int 4
int 1000
callsub gety_4
store 11
byte "A"
app_global_get
load 11
-
store 14
load 14
byte "PACT_FEE_BPS"
app_global_get
mulw
int 0
int 10000
divmodw
pop
pop
swap
!
assert
store 13
load 14
int 10000
byte "FEE_BPS"
app_global_get
-
mulw
int 0
int 10000
divmodw
pop
pop
swap
!
assert
store 12
load 12
txna ApplicationArgs 1
btoi
-
pop
byte "A"
byte "A"
app_global_get
load 13
-
app_global_put
byte "A"
byte "A"
app_global_get
load 12
-
app_global_put
byte "B"
byte "B"
app_global_get
txn GroupIndex
int 1
-
gtxns AssetAmount
+
app_global_put
byte "PRIMARY_FEES"
byte "PRIMARY_FEES"
app_global_get
load 13
+
app_global_put
int {primary_asset_id}
load 12
callsub SendToCaller_0
int 1
return
main_l66:
int 1000
byte "A"
app_global_get
byte "B"
app_global_get
int 2
byte "INITIAL_A"
app_global_get
byte "FUTURE_A"
app_global_get
byte "INITIAL_A_TIME"
app_global_get
byte "FUTURE_A_TIME"
app_global_get
callsub amplifier_3
int 4
callsub getD_2
store 10
byte "A"
app_global_get
int {primary_asset_id}
!
bnz main_l72
txn GroupIndex
int 1
-
gtxns AssetAmount
main_l68:
+
byte "INITIAL_A"
app_global_get
byte "FUTURE_A"
app_global_get
byte "INITIAL_A_TIME"
app_global_get
byte "FUTURE_A_TIME"
app_global_get
callsub amplifier_3
load 10
int 4
int 1000
callsub gety_4
store 6
byte "B"
app_global_get
load 6
-
store 9
load 9
byte "PACT_FEE_BPS"
app_global_get
mulw
int 0
int 10000
divmodw
pop
pop
swap
!
assert
store 8
load 9
int 10000
byte "FEE_BPS"
app_global_get
-
mulw
int 0
int 10000
divmodw
pop
pop
swap
!
assert
store 7
load 7
txna ApplicationArgs 1
btoi
-
pop
byte "B"
byte "B"
app_global_get
load 8
-
app_global_put
byte "B"
byte "B"
app_global_get
load 7
-
app_global_put
byte "A"
byte "A"
app_global_get
int {primary_asset_id}
!
bnz main_l71
txn GroupIndex
int 1
-
gtxns AssetAmount
main_l70:
+
app_global_put
byte "SECONDARY_FEES"
byte "SECONDARY_FEES"
app_global_get
load 8
+
app_global_put
int {secondary_asset_id}
load 7
callsub SendToCaller_0
int 1
return
main_l71:
txn GroupIndex
int 1
-
gtxns Amount
b main_l70
main_l72:
txn GroupIndex
int 1
-
gtxns Amount
b main_l68
main_l73:
txn GroupIndex
int 1
-
gtxns TypeEnum
int pay
==
txn GroupIndex
int 1
-
gtxns RekeyTo
global ZeroAddress
==
&&
txn GroupIndex
int 1
-
gtxns CloseRemainderTo
global ZeroAddress
==
&&
txn GroupIndex
int 1
-
gtxns Receiver
global CurrentApplicationAddress
==
&&
b main_l61
main_l74:
txn Sender
global CreatorAddress
==
assert
byte "LTID"
app_global_get
int 0
==
assert
int {primary_asset_id}
!
bnz main_l82
int {primary_asset_id}
asset_params_get AssetUnitName
store 3
store 2
load 2
byte ""
==
bnz main_l81
load 2
store 0
main_l77:
int {secondary_asset_id}
asset_params_get AssetUnitName
store 5
store 4
load 4
byte ""
==
bnz main_l80
load 4
store 1
main_l79:
itxn_begin
int 0
itxn_field Fee
int acfg
itxn_field TypeEnum
int 18446744073709551615
itxn_field ConfigAssetTotal
int 6
itxn_field ConfigAssetDecimals
load 0
byte "/"
concat
load 1
concat
byte " [SI] PACT LP TKN"
concat
itxn_field ConfigAssetName
byte "SIPLP"
itxn_field ConfigAssetUnitName
byte "https://pact.fi/"
itxn_field ConfigAssetURL
global CurrentApplicationAddress
itxn_field ConfigAssetReserve
itxn_submit
byte "LTID"
itxn CreatedAssetID
app_global_put
int 1
return
main_l80:
byte "?"
store 1
b main_l79
main_l81:
byte "?"
store 0
b main_l77
main_l82:
byte "ALGO"
store 0
b main_l77
main_l83:
txn Sender
global CreatorAddress
==
assert
int {primary_asset_id}
!
!
bnz main_l85
main_l84:
itxn_begin
int axfer
itxn_field TypeEnum
global CurrentApplicationAddress
itxn_field AssetReceiver
int 0
itxn_field AssetAmount
int {secondary_asset_id}
itxn_field XferAsset
int 0
itxn_field Fee
itxn_submit
int 1
return
main_l85:
itxn_begin
int axfer
itxn_field TypeEnum
global CurrentApplicationAddress
itxn_field AssetReceiver
int 0
itxn_field AssetAmount
int {primary_asset_id}
itxn_field XferAsset
int 0
itxn_field Fee
itxn_submit
b main_l84
main_l86:
int {primary_asset_id}
int {secondary_asset_id}
<
assert
int {fee_bps}
int 10000
<
assert
int {pact_fee_bps}
int {fee_bps}
int 2
/
<=
assert
int {initial_A}
int 0
>
int {initial_A}
int 1000000
<
&&
assert
byte "CONFIG"
int {primary_asset_id}
itob
int {secondary_asset_id}
itob
concat
int {fee_bps}
itob
concat
int 1000
itob
concat
app_global_put
byte "CONTRACT_NAME"
byte "[SI] PACT AMM"
app_global_put
byte "VERSION"
int 1
app_global_put
byte "ADMIN"
addr {admin_and_treasury_address}
app_global_put
byte "TREASURY"
addr {admin_and_treasury_address}
app_global_put
byte "A"
int 0
app_global_put
byte "B"
int 0
app_global_put
byte "L"
int 0
app_global_put
byte "LTID"
int 0
app_global_put
byte "INITIAL_A"
int {initial_A}
app_global_put
byte "FUTURE_A"
int {initial_A}
app_global_put
byte "INITIAL_A_TIME"
global LatestTimestamp
app_global_put
byte "FUTURE_A_TIME"
global LatestTimestamp
app_global_put
byte "FEE_BPS"
int {fee_bps}
app_global_put
byte "PACT_FEE_BPS"
int {pact_fee_bps}
app_global_put
byte "PRIMARY_FEES"
int 0
app_global_put
byte "SECONDARY_FEES"
int 0
app_global_put
int 1
return
main_l87:
int 0
return
main_l88:
txna Assets 2
byte "LTID"
app_global_get
==
b main_l4

// SendToCaller
SendToCaller_0:
store 37
store 36
load 36
bnz SendToCaller_0_l2
itxn_begin
int pay
itxn_field TypeEnum
txn Sender
itxn_field Receiver
load 37
itxn_field Amount
int 0
itxn_field Fee
itxn_submit
b SendToCaller_0_l3
SendToCaller_0_l2:
itxn_begin
int axfer
itxn_field TypeEnum
txn Sender
itxn_field AssetReceiver
load 37
itxn_field AssetAmount
load 36
itxn_field XferAsset
int 0
itxn_field Fee
itxn_submit
SendToCaller_0_l3:
retsub

// SendToAddress
SendToAddress_1:
store 40
store 39
store 38
load 39
bnz SendToAddress_1_l2
itxn_begin
int pay
itxn_field TypeEnum
load 38
itxn_field Receiver
load 40
itxn_field Amount
int 0
itxn_field Fee
itxn_submit
b SendToAddress_1_l3
SendToAddress_1_l2:
itxn_begin
int axfer
itxn_field TypeEnum
load 38
itxn_field AssetReceiver
load 40
itxn_field AssetAmount
load 39
itxn_field XferAsset
int 0
itxn_field Fee
itxn_submit
SendToAddress_1_l3:
retsub

// get_D
getD_2:
store 46
store 45
store 44
store 43
store 42
store 41
load 42
load 43
+
itob
store 50
load 50
int 0
itob
b==
bnz getD_2_l8
load 50
store 52
load 45
load 46
*
store 51
int 0
store 55
load 44
int 1
+
itob
store 56
load 51
load 41
-
store 57
getD_2_l2:
load 55
int 255
<
bnz getD_2_l5
getD_2_l3:
int 255
load 55
==
bz getD_2_l9
err
getD_2_l5:
load 55
int 1
+
store 55
load 52
load 52
b*
load 52
b*
store 48
load 42
itob
load 43
itob
b*
load 46
itob
b*
store 49
load 48
load 49
b/
store 48
load 52
store 47
load 52
load 51
itob
load 50
b*
load 41
itob
b/
load 48
load 44
itob
b*
b+
b*
store 53
load 57
itob
load 52
b*
load 41
itob
b/
load 56
load 48
b*
b+
store 54
load 53
load 54
b/
store 52
load 52
load 47
b>
bnz getD_2_l7
load 47
load 52
b-
int 1
itob
b<=
bnz getD_2_l3
b getD_2_l2
getD_2_l7:
load 52
load 47
b-
int 1
itob
b<=
bnz getD_2_l3
b getD_2_l2
getD_2_l8:
int 0
retsub
getD_2_l9:
load 52
btoi
retsub

// amplifier
amplifier_3:
store 61
store 60
store 59
store 58
global LatestTimestamp
load 61
<
bnz amplifier_3_l2
load 59
retsub
amplifier_3_l2:
load 59
load 58
>
bnz amplifier_3_l4
load 58
load 58
load 59
-
global LatestTimestamp
load 60
-
mulw
int 0
load 61
load 60
-
divmodw
pop
pop
swap
!
assert
-
retsub
amplifier_3_l4:
load 58
load 59
load 58
-
global LatestTimestamp
load 60
-
mulw
int 0
load 61
load 60
-
divmodw
pop
pop
swap
!
assert
+
retsub

// get_y
gety_4:
store 66
store 65
store 64
store 63
store 62
load 64
itob
load 64
itob
load 64
itob
b*
b*
load 66
itob
b*
int 4
itob
load 62
itob
load 63
load 65
*
itob
b*
b*
b/
store 68
load 64
load 62
load 64
itob
load 66
itob
b*
load 63
load 65
*
itob
b/
btoi
+
>=
bnz gety_4_l2
load 62
load 64
itob
load 66
itob
b*
load 63
load 65
*
itob
b/
btoi
+
load 64
-
itob
store 67
load 67
load 67
b*
int 4
itob
load 68
b*
b+
bsqrt
load 67
b-
int 2
itob
b/
store 69
b gety_4_l3
gety_4_l2:
load 64
load 62
load 64
itob
load 66
itob
b*
load 63
load 65
*
itob
b/
btoi
+
-
itob
store 67
load 67
load 67
b*
int 4
itob
load 68
b*
b+
bsqrt
load 67
b+
int 2
itob
b/
store 69
gety_4_l3:
load 69
btoi
retsub

// increase_opcode_quota
increaseopcodequota_5:
store 70
int 0
store 71
increaseopcodequota_5_l1:
load 71
load 70
<
bz increaseopcodequota_5_l3
itxn_begin
int appl
itxn_field TypeEnum
int DeleteApplication
itxn_field OnCompletion
byte base64(BoEB)
itxn_field ApprovalProgram
byte base64(BoEB)
itxn_field ClearStateProgram
int 0
itxn_field Fee
itxn_submit
load 71
int 1
+
store 71
b increaseopcodequota_5_l1
increaseopcodequota_5_l3:
retsub
